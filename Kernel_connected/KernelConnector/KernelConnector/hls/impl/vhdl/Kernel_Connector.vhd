-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Kernel_Connector is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    InputStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    InputStream_TVALID : IN STD_LOGIC;
    InputStream_TREADY : OUT STD_LOGIC;
    OutStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    OutStream_full_n : IN STD_LOGIC;
    OutStream_write : OUT STD_LOGIC );
end;


architecture behav of Kernel_Connector is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Kernel_Connector_Kernel_Connector,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.713000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=51,HLS_SYN_LUT=266,HLS_VERSION=2024_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_idle : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_idle : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal intermediateStream_full_n : STD_LOGIC;
    signal intermediateStream_write : STD_LOGIC;
    signal grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal intermediateStream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediateStream_empty_n : STD_LOGIC;
    signal intermediateStream_read : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal regslice_both_InputStream_U_apdone_blk : STD_LOGIC;
    signal InputStream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal InputStream_TVALID_int_regslice : STD_LOGIC;
    signal InputStream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_InputStream_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_6_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        InputStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        InputStream_TVALID : IN STD_LOGIC;
        InputStream_TREADY : OUT STD_LOGIC;
        intermediateStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        intermediateStream_full_n : IN STD_LOGIC;
        intermediateStream_write : OUT STD_LOGIC );
    end component;


    component Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_8_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        intermediateStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        intermediateStream_empty_n : IN STD_LOGIC;
        intermediateStream_read : OUT STD_LOGIC;
        OutStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        OutStream_full_n : IN STD_LOGIC;
        OutStream_write : OUT STD_LOGIC );
    end component;


    component Kernel_Connector_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Kernel_Connector_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46 : component Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_6_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start,
        ap_done => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done,
        ap_idle => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_idle,
        ap_ready => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready,
        InputStream_TDATA => InputStream_TDATA_int_regslice,
        InputStream_TVALID => InputStream_TVALID_int_regslice,
        InputStream_TREADY => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY,
        intermediateStream_din => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din,
        intermediateStream_full_n => intermediateStream_full_n,
        intermediateStream_write => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write);

    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53 : component Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_8_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start,
        ap_done => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done,
        ap_idle => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_idle,
        ap_ready => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready,
        intermediateStream_dout => intermediateStream_dout,
        intermediateStream_empty_n => intermediateStream_empty_n,
        intermediateStream_read => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read,
        OutStream_din => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din,
        OutStream_full_n => OutStream_full_n,
        OutStream_write => grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write);

    intermediateStream_fifo_U : component Kernel_Connector_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din,
        if_full_n => intermediateStream_full_n,
        if_write => intermediateStream_write,
        if_dout => intermediateStream_dout,
        if_empty_n => intermediateStream_empty_n,
        if_read => intermediateStream_read);

    regslice_both_InputStream_U : component Kernel_Connector_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => InputStream_TDATA,
        vld_in => InputStream_TVALID,
        ack_in => regslice_both_InputStream_U_ack_in,
        data_out => InputStream_TDATA_int_regslice,
        vld_out => InputStream_TVALID_int_regslice,
        ack_out => InputStream_TREADY_int_regslice,
        apdone_blk => regslice_both_InputStream_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready = ap_const_logic_1)) then 
                    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready = ap_const_logic_1)) then 
                    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done, grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    InputStream_TREADY <= regslice_both_InputStream_U_ack_in;

    InputStream_TREADY_int_regslice_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            InputStream_TREADY_int_regslice <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY;
        else 
            InputStream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    OutStream_din <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din;

    OutStream_write_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutStream_write <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write;
        else 
            OutStream_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done)
    begin
        if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done)
    begin
        if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg;
    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg;

    intermediateStream_read_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            intermediateStream_read <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read;
        else 
            intermediateStream_read <= ap_const_logic_0;
        end if; 
    end process;


    intermediateStream_write_assign_proc : process(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            intermediateStream_write <= grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write;
        else 
            intermediateStream_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
