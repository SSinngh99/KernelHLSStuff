// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Kernel_Connector_Kernel_Connector,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.713000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=51,HLS_SYN_LUT=266,HLS_VERSION=2024_1}" *)

module Kernel_Connector (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        InputStream_TDATA,
        InputStream_TVALID,
        InputStream_TREADY,
        OutStream_din,
        OutStream_full_n,
        OutStream_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] InputStream_TDATA;
input   InputStream_TVALID;
output   InputStream_TREADY;
output  [31:0] OutStream_din;
input   OutStream_full_n;
output   OutStream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg OutStream_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_idle;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY;
wire   [31:0] grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_idle;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read;
wire   [31:0] grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din;
wire    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write;
reg    grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    intermediateStream_full_n;
reg    intermediateStream_write;
reg    grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [31:0] intermediateStream_dout;
wire    intermediateStream_empty_n;
reg    intermediateStream_read;
wire    ap_CS_fsm_state6;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    regslice_both_InputStream_U_apdone_blk;
wire   [31:0] InputStream_TDATA_int_regslice;
wire    InputStream_TVALID_int_regslice;
reg    InputStream_TREADY_int_regslice;
wire    regslice_both_InputStream_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg = 1'b0;
#0 grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg = 1'b0;
end

Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_6_1 grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start),
    .ap_done(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done),
    .ap_idle(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_idle),
    .ap_ready(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready),
    .InputStream_TDATA(InputStream_TDATA_int_regslice),
    .InputStream_TVALID(InputStream_TVALID_int_regslice),
    .InputStream_TREADY(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY),
    .intermediateStream_din(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din),
    .intermediateStream_full_n(intermediateStream_full_n),
    .intermediateStream_write(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write)
);

Kernel_Connector_Kernel_Connector_Pipeline_VITIS_LOOP_8_1 grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start),
    .ap_done(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done),
    .ap_idle(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_idle),
    .ap_ready(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready),
    .intermediateStream_dout(intermediateStream_dout),
    .intermediateStream_empty_n(intermediateStream_empty_n),
    .intermediateStream_read(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read),
    .OutStream_din(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din),
    .OutStream_full_n(OutStream_full_n),
    .OutStream_write(grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write)
);

Kernel_Connector_fifo_w32_d3_S intermediateStream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_din),
    .if_full_n(intermediateStream_full_n),
    .if_write(intermediateStream_write),
    .if_dout(intermediateStream_dout),
    .if_empty_n(intermediateStream_empty_n),
    .if_read(intermediateStream_read)
);

Kernel_Connector_regslice_both #(
    .DataWidth( 32 ))
regslice_both_InputStream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(InputStream_TDATA),
    .vld_in(InputStream_TVALID),
    .ack_in(regslice_both_InputStream_U_ack_in),
    .data_out(InputStream_TDATA_int_regslice),
    .vld_out(InputStream_TVALID_int_regslice),
    .ack_out(InputStream_TREADY_int_regslice),
    .apdone_blk(regslice_both_InputStream_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= 1'b1;
        end else if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_ready == 1'b1)) begin
            grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= 1'b1;
        end else if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_ready == 1'b1)) begin
            grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        InputStream_TREADY_int_regslice = grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_InputStream_TREADY;
    end else begin
        InputStream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        OutStream_write = grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_write;
    end else begin
        OutStream_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        intermediateStream_read = grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_intermediateStream_read;
    end else begin
        intermediateStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        intermediateStream_write = grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_intermediateStream_write;
    end else begin
        intermediateStream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign InputStream_TREADY = regslice_both_InputStream_U_ack_in;

assign OutStream_din = grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_OutStream_din;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start = grp_Kernel_Connector_Pipeline_VITIS_LOOP_6_1_fu_46_ap_start_reg;

assign grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start = grp_Kernel_Connector_Pipeline_VITIS_LOOP_8_1_fu_53_ap_start_reg;

endmodule //Kernel_Connector
