

================================================================
== Synthesis Summary Report of 'Kernel2Sum'
================================================================
+ General Information: 
    * Date:           Thu Jun 12 00:01:59 2025
    * Version:        2024.1 (Build 5069499 on May 21 2024)
    * Project:        Kernel2Sum
    * Solution:       hls (Vitis Kernel Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu250-figd2104-2L-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +-------------------+------+------+---------+--------+----------+---------+------+----------+------+----+----------+-----------+-----+
    |      Modules      | Issue|      | Latency | Latency| Iteration|         | Trip |          |      |    |          |           |     |
    |      & Loops      | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined| BRAM | DSP|    FF    |    LUT    | URAM|
    +-------------------+------+------+---------+--------+----------+---------+------+----------+------+----+----------+-----------+-----+
    |+ Kernel2Sum       |     -|  5.50|        -|       -|         -|        0|     -|    rewind|     -|   -|  74 (~0%)|  146 (~0%)|    -|
    | o VITIS_LOOP_8_1  |    II|  7.30|        -|       -|         2|        2|     -|       yes|     -|   -|         -|          -|    -|
    +-------------------+------+------+---------+--------+----------+---------+------+----------+------+----+----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* S_AXILITE Interfaces
+---------------+------------+---------------+
| Interface     | Data Width | Address Width |
+---------------+------------+---------------+
| s_axi_control | 32         | 4             |
+---------------+------------+---------------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                                         |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 4=AP_CONTINUE 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                                           |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                                      |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                                      |
+---------------+----------+--------+-------+--------+----------------------------------+------------------------------------------------------------------------------------+

* AXIS
+-------------+-----------+---------------+-------+--------+--------+
| Interface   | Direction | Register Mode | TDATA | TREADY | TVALID |
+-------------+-----------+---------------+-------+--------+--------+
| InputStream | in        | both          | 32    | 1      | 1      |
| OutStream   | out       | both          | 32    | 1      | 1      |
+-------------+-----------+---------------+-------+--------+--------+

* TOP LEVEL CONTROL
+-----------+---------------+-----------+
| Interface | Type          | Ports     |
+-----------+---------------+-----------+
| ap_clk    | clock         | ap_clk    |
| ap_rst_n  | reset         | ap_rst_n  |
| interrupt | interrupt     | interrupt |
| ap_ctrl   | ap_ctrl_chain |           |
+-----------+---------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+-------------+-----------+-----------------+
| Argument    | Direction | Datatype        |
+-------------+-----------+-----------------+
| InputStream | in        | stream<int, 0>& |
| OutStream   | out       | stream<int, 0>& |
+-------------+-----------+-----------------+

* SW-to-HW Mapping
+-------------+--------------+-----------+
| Argument    | HW Interface | HW Type   |
+-------------+--------------+-----------+
| InputStream | InputStream  | interface |
| OutStream   | OutStream    | interface |
+-------------+--------------+-----------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.


================================================================
== Bind Op Report
================================================================
+-------------------+-----+--------+----------+-----+--------+---------+
| Name              | DSP | Pragma | Variable | Op  | Impl   | Latency |
+-------------------+-----+--------+----------+-----+--------+---------+
| + Kernel2Sum      | 0   |        |          |     |        |         |
|   outVal_fu_75_p2 |     |        | outVal   | add | fabric | 0       |
+-------------------+-----+--------+----------+-----+--------+---------+


================================================================
== Storage Report
================================================================
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| Name              | Usage     | Type      | BRAM | URAM | Pragma | Variable | Impl | Latency | Bitwidth, Depth, |
|                   |           |           |      |      |        |          |      |         | Banks            |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| + Kernel2Sum      |           |           | 0    | 0    |        |          |      |         |                  |
|   control_s_axi_U | interface | s_axilite |      |      |        |          |      |         |                  |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+---------------------------------+--------------------------------+
| Type      | Options                         | Location                       |
+-----------+---------------------------------+--------------------------------+
| interface | axis port = InputStream depth=3 | Kernel2Sum.cpp:4 in kernel2sum |
+-----------+---------------------------------+--------------------------------+


